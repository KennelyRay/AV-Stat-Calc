{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const UnitsContext=/*#__PURE__*/createContext();export const useUnits=()=>{const context=useContext(UnitsContext);if(!context){throw new Error('useUnits must be used within a UnitsProvider');}return context;};export const UnitsProvider=_ref=>{let{children}=_ref;const[units,setUnits]=useState([]);const[loading,setLoading]=useState(true);// Load units from localStorage on component mount\nuseEffect(()=>{const loadUnits=()=>{try{const savedUnits=localStorage.getItem('anime-vanguards-units');if(savedUnits){const parsedUnits=JSON.parse(savedUnits);setUnits(parsedUnits);}// If no saved data exists, start with empty array\n}catch(error){console.error('Error loading units from localStorage:',error);// Start with empty array on error\n}finally{setLoading(false);}};loadUnits();},[]);// Save units to localStorage whenever units change\nuseEffect(()=>{if(!loading){try{localStorage.setItem('anime-vanguards-units',JSON.stringify(units));}catch(error){console.error('Error saving units to localStorage:',error);}}},[units,loading]);// Add a new unit\nconst addUnit=unitData=>{const newUnit={...unitData,id:Math.max(...units.map(u=>u.id),0)+1,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()};setUnits(prev=>[...prev,newUnit]);return newUnit;};// Update an existing unit\nconst updateUnit=(unitId,unitData)=>{const updatedUnit={...unitData,id:unitId,updatedAt:new Date().toISOString()};setUnits(prev=>prev.map(unit=>unit.id===unitId?updatedUnit:unit));return updatedUnit;};// Delete a unit\nconst deleteUnit=unitId=>{setUnits(prev=>prev.filter(unit=>unit.id!==unitId));};// Get a unit by ID\nconst getUnitById=unitId=>{return units.find(unit=>unit.id===unitId);};// Get units by type\nconst getUnitsByType=type=>{return units.filter(unit=>unit.unitType===type);};// Get units by rarity\nconst getUnitsByRarity=rarity=>{return units.filter(unit=>unit.rarity===rarity);};// Get units by element\nconst getUnitsByElement=element=>{return units.filter(unit=>unit.element===element);};// Search units by name\nconst searchUnits=query=>{if(!query)return units;return units.filter(unit=>unit.name.toLowerCase().includes(query.toLowerCase())||unit.description.toLowerCase().includes(query.toLowerCase())||unit.element.toLowerCase().includes(query.toLowerCase())||unit.rarity.toLowerCase().includes(query.toLowerCase())||unit.tier.toLowerCase().includes(query.toLowerCase()));};// Clear all units (for admin reset)\nconst clearAllUnits=()=>{setUnits([]);};// Bulk import units\nconst importUnits=unitsArray=>{const processedUnits=unitsArray.map((unit,index)=>({...unit,id:Math.max(...units.map(u=>u.id),0)+index+1,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()}));setUnits(prev=>[...prev,...processedUnits]);return processedUnits;};const value={units,loading,addUnit,updateUnit,deleteUnit,getUnitById,getUnitsByType,getUnitsByRarity,getUnitsByElement,searchUnits,clearAllUnits,importUnits,// Statistics\ntotalUnits:units.length,baseUnits:units.filter(u=>u.unitType==='base').length,evolutionUnits:units.filter(u=>u.unitType==='evolution').length,nonEvolvableUnits:units.filter(u=>u.unitType==='non-evolvable').length,vanguardUnits:units.filter(u=>u.rarity==='Vanguard').length,secretUnits:units.filter(u=>u.rarity==='Secret').length,mythicalUnits:units.filter(u=>u.rarity==='Mythical').length};return/*#__PURE__*/_jsx(UnitsContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsx","_jsx","UnitsContext","useUnits","context","Error","UnitsProvider","_ref","children","units","setUnits","loading","setLoading","loadUnits","savedUnits","localStorage","getItem","parsedUnits","JSON","parse","error","console","setItem","stringify","addUnit","unitData","newUnit","id","Math","max","map","u","createdAt","Date","toISOString","updatedAt","prev","updateUnit","unitId","updatedUnit","unit","deleteUnit","filter","getUnitById","find","getUnitsByType","type","unitType","getUnitsByRarity","rarity","getUnitsByElement","element","searchUnits","query","name","toLowerCase","includes","description","tier","clearAllUnits","importUnits","unitsArray","processedUnits","index","value","totalUnits","length","baseUnits","evolutionUnits","nonEvolvableUnits","vanguardUnits","secretUnits","mythicalUnits","Provider"],"sources":["C:/Users/Kennely Ray/Desktop/AV-Stat-Calc/src/contexts/UnitsContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst UnitsContext = createContext();\r\n\r\nexport const useUnits = () => {\r\n  const context = useContext(UnitsContext);\r\n  if (!context) {\r\n    throw new Error('useUnits must be used within a UnitsProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const UnitsProvider = ({ children }) => {\r\n  const [units, setUnits] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Load units from localStorage on component mount\r\n  useEffect(() => {\r\n    const loadUnits = () => {\r\n      try {\r\n        const savedUnits = localStorage.getItem('anime-vanguards-units');\r\n        if (savedUnits) {\r\n          const parsedUnits = JSON.parse(savedUnits);\r\n          setUnits(parsedUnits);\r\n        }\r\n        // If no saved data exists, start with empty array\r\n      } catch (error) {\r\n        console.error('Error loading units from localStorage:', error);\r\n        // Start with empty array on error\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    loadUnits();\r\n  }, []);\r\n\r\n  // Save units to localStorage whenever units change\r\n  useEffect(() => {\r\n    if (!loading) {\r\n      try {\r\n        localStorage.setItem('anime-vanguards-units', JSON.stringify(units));\r\n      } catch (error) {\r\n        console.error('Error saving units to localStorage:', error);\r\n      }\r\n    }\r\n  }, [units, loading]);\r\n\r\n  // Add a new unit\r\n  const addUnit = (unitData) => {\r\n    const newUnit = {\r\n      ...unitData,\r\n      id: Math.max(...units.map(u => u.id), 0) + 1,\r\n      createdAt: new Date().toISOString(),\r\n      updatedAt: new Date().toISOString()\r\n    };\r\n    setUnits(prev => [...prev, newUnit]);\r\n    return newUnit;\r\n  };\r\n\r\n  // Update an existing unit\r\n  const updateUnit = (unitId, unitData) => {\r\n    const updatedUnit = {\r\n      ...unitData,\r\n      id: unitId,\r\n      updatedAt: new Date().toISOString()\r\n    };\r\n    setUnits(prev => prev.map(unit => \r\n      unit.id === unitId ? updatedUnit : unit\r\n    ));\r\n    return updatedUnit;\r\n  };\r\n\r\n  // Delete a unit\r\n  const deleteUnit = (unitId) => {\r\n    setUnits(prev => prev.filter(unit => unit.id !== unitId));\r\n  };\r\n\r\n  // Get a unit by ID\r\n  const getUnitById = (unitId) => {\r\n    return units.find(unit => unit.id === unitId);\r\n  };\r\n\r\n  // Get units by type\r\n  const getUnitsByType = (type) => {\r\n    return units.filter(unit => unit.unitType === type);\r\n  };\r\n\r\n  // Get units by rarity\r\n  const getUnitsByRarity = (rarity) => {\r\n    return units.filter(unit => unit.rarity === rarity);\r\n  };\r\n\r\n  // Get units by element\r\n  const getUnitsByElement = (element) => {\r\n    return units.filter(unit => unit.element === element);\r\n  };\r\n\r\n  // Search units by name\r\n  const searchUnits = (query) => {\r\n    if (!query) return units;\r\n    return units.filter(unit => \r\n      unit.name.toLowerCase().includes(query.toLowerCase()) ||\r\n      unit.description.toLowerCase().includes(query.toLowerCase()) ||\r\n      unit.element.toLowerCase().includes(query.toLowerCase()) ||\r\n      unit.rarity.toLowerCase().includes(query.toLowerCase()) ||\r\n      unit.tier.toLowerCase().includes(query.toLowerCase())\r\n    );\r\n  };\r\n\r\n  // Clear all units (for admin reset)\r\n  const clearAllUnits = () => {\r\n    setUnits([]);\r\n  };\r\n\r\n  // Bulk import units\r\n  const importUnits = (unitsArray) => {\r\n    const processedUnits = unitsArray.map((unit, index) => ({\r\n      ...unit,\r\n      id: Math.max(...units.map(u => u.id), 0) + index + 1,\r\n      createdAt: new Date().toISOString(),\r\n      updatedAt: new Date().toISOString()\r\n    }));\r\n    setUnits(prev => [...prev, ...processedUnits]);\r\n    return processedUnits;\r\n  };\r\n\r\n  const value = {\r\n    units,\r\n    loading,\r\n    addUnit,\r\n    updateUnit,\r\n    deleteUnit,\r\n    getUnitById,\r\n    getUnitsByType,\r\n    getUnitsByRarity,\r\n    getUnitsByElement,\r\n    searchUnits,\r\n    clearAllUnits,\r\n    importUnits,\r\n    // Statistics\r\n    totalUnits: units.length,\r\n    baseUnits: units.filter(u => u.unitType === 'base').length,\r\n    evolutionUnits: units.filter(u => u.unitType === 'evolution').length,\r\n    nonEvolvableUnits: units.filter(u => u.unitType === 'non-evolvable').length,\r\n    vanguardUnits: units.filter(u => u.rarity === 'Vanguard').length,\r\n    secretUnits: units.filter(u => u.rarity === 'Secret').length,\r\n    mythicalUnits: units.filter(u => u.rarity === 'Mythical').length\r\n  };\r\n\r\n  return (\r\n    <UnitsContext.Provider value={value}>\r\n      {children}\r\n    </UnitsContext.Provider>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}