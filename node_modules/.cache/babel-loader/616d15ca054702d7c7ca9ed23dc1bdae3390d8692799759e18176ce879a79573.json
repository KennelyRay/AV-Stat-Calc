{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kennely Ray\\\\Desktop\\\\AV-Stat-Calc\\\\src\\\\contexts\\\\UnitsContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UnitsContext = /*#__PURE__*/createContext();\nexport const useUnits = () => {\n  _s();\n  const context = useContext(UnitsContext);\n  if (!context) {\n    throw new Error('useUnits must be used within a UnitsProvider');\n  }\n  return context;\n};\n_s(useUnits, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const UnitsProvider = ({\n  children\n}) => {\n  _s2();\n  const [units, setUnits] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  // Load units from localStorage on component mount\n  useEffect(() => {\n    const loadUnits = () => {\n      try {\n        const savedUnits = localStorage.getItem('anime-vanguards-units');\n        if (savedUnits) {\n          const parsedUnits = JSON.parse(savedUnits);\n          setUnits(parsedUnits);\n        }\n        // If no saved data exists, start with empty array\n      } catch (error) {\n        console.error('Error loading units from localStorage:', error);\n        // Start with empty array on error\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadUnits();\n  }, []);\n\n  // Save units to localStorage whenever units change\n  useEffect(() => {\n    if (!loading) {\n      try {\n        localStorage.setItem('anime-vanguards-units', JSON.stringify(units));\n      } catch (error) {\n        console.error('Error saving units to localStorage:', error);\n      }\n    }\n  }, [units, loading]);\n\n  // Add a new unit\n  const addUnit = unitData => {\n    const newUnit = {\n      ...unitData,\n      id: Math.max(...units.map(u => u.id), 0) + 1,\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString()\n    };\n    setUnits(prev => [...prev, newUnit]);\n    return newUnit;\n  };\n\n  // Update an existing unit\n  const updateUnit = (unitId, unitData) => {\n    const updatedUnit = {\n      ...unitData,\n      id: unitId,\n      updatedAt: new Date().toISOString()\n    };\n    setUnits(prev => prev.map(unit => unit.id === unitId ? updatedUnit : unit));\n    return updatedUnit;\n  };\n\n  // Delete a unit\n  const deleteUnit = unitId => {\n    setUnits(prev => prev.filter(unit => unit.id !== unitId));\n  };\n\n  // Get a unit by ID\n  const getUnitById = unitId => {\n    return units.find(unit => unit.id === unitId);\n  };\n\n  // Get units by type\n  const getUnitsByType = type => {\n    return units.filter(unit => unit.unitType === type);\n  };\n\n  // Get units by rarity\n  const getUnitsByRarity = rarity => {\n    return units.filter(unit => unit.rarity === rarity);\n  };\n\n  // Get units by element\n  const getUnitsByElement = element => {\n    return units.filter(unit => unit.element === element);\n  };\n\n  // Search units by name\n  const searchUnits = query => {\n    if (!query) return units;\n    return units.filter(unit => unit.name.toLowerCase().includes(query.toLowerCase()) || unit.description.toLowerCase().includes(query.toLowerCase()) || unit.element.toLowerCase().includes(query.toLowerCase()) || unit.rarity.toLowerCase().includes(query.toLowerCase()) || unit.tier.toLowerCase().includes(query.toLowerCase()));\n  };\n\n  // Clear all units (for admin reset)\n  const clearAllUnits = () => {\n    setUnits([]);\n  };\n\n  // Bulk import units\n  const importUnits = unitsArray => {\n    const processedUnits = unitsArray.map((unit, index) => ({\n      ...unit,\n      id: Math.max(...units.map(u => u.id), 0) + index + 1,\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString()\n    }));\n    setUnits(prev => [...prev, ...processedUnits]);\n    return processedUnits;\n  };\n  const value = {\n    units,\n    loading,\n    addUnit,\n    updateUnit,\n    deleteUnit,\n    getUnitById,\n    getUnitsByType,\n    getUnitsByRarity,\n    getUnitsByElement,\n    searchUnits,\n    clearAllUnits,\n    importUnits,\n    // Statistics\n    totalUnits: units.length,\n    baseUnits: units.filter(u => u.unitType === 'base').length,\n    evolutionUnits: units.filter(u => u.unitType === 'evolution').length,\n    nonEvolvableUnits: units.filter(u => u.unitType === 'non-evolvable').length,\n    vanguardUnits: units.filter(u => u.rarity === 'Vanguard').length,\n    secretUnits: units.filter(u => u.rarity === 'Secret').length,\n    mythicalUnits: units.filter(u => u.rarity === 'Mythical').length\n  };\n  return /*#__PURE__*/_jsxDEV(UnitsContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n};\n_s2(UnitsProvider, \"6V5OHtcXQbzraYBoun/C9epb1ls=\");\n_c = UnitsProvider;\nvar _c;\n$RefreshReg$(_c, \"UnitsProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","UnitsContext","useUnits","_s","context","Error","UnitsProvider","children","_s2","units","setUnits","loading","setLoading","loadUnits","savedUnits","localStorage","getItem","parsedUnits","JSON","parse","error","console","setItem","stringify","addUnit","unitData","newUnit","id","Math","max","map","u","createdAt","Date","toISOString","updatedAt","prev","updateUnit","unitId","updatedUnit","unit","deleteUnit","filter","getUnitById","find","getUnitsByType","type","unitType","getUnitsByRarity","rarity","getUnitsByElement","element","searchUnits","query","name","toLowerCase","includes","description","tier","clearAllUnits","importUnits","unitsArray","processedUnits","index","value","totalUnits","length","baseUnits","evolutionUnits","nonEvolvableUnits","vanguardUnits","secretUnits","mythicalUnits","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Kennely Ray/Desktop/AV-Stat-Calc/src/contexts/UnitsContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst UnitsContext = createContext();\r\n\r\nexport const useUnits = () => {\r\n  const context = useContext(UnitsContext);\r\n  if (!context) {\r\n    throw new Error('useUnits must be used within a UnitsProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const UnitsProvider = ({ children }) => {\r\n  const [units, setUnits] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Load units from localStorage on component mount\r\n  useEffect(() => {\r\n    const loadUnits = () => {\r\n      try {\r\n        const savedUnits = localStorage.getItem('anime-vanguards-units');\r\n        if (savedUnits) {\r\n          const parsedUnits = JSON.parse(savedUnits);\r\n          setUnits(parsedUnits);\r\n        }\r\n        // If no saved data exists, start with empty array\r\n      } catch (error) {\r\n        console.error('Error loading units from localStorage:', error);\r\n        // Start with empty array on error\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    loadUnits();\r\n  }, []);\r\n\r\n  // Save units to localStorage whenever units change\r\n  useEffect(() => {\r\n    if (!loading) {\r\n      try {\r\n        localStorage.setItem('anime-vanguards-units', JSON.stringify(units));\r\n      } catch (error) {\r\n        console.error('Error saving units to localStorage:', error);\r\n      }\r\n    }\r\n  }, [units, loading]);\r\n\r\n  // Add a new unit\r\n  const addUnit = (unitData) => {\r\n    const newUnit = {\r\n      ...unitData,\r\n      id: Math.max(...units.map(u => u.id), 0) + 1,\r\n      createdAt: new Date().toISOString(),\r\n      updatedAt: new Date().toISOString()\r\n    };\r\n    setUnits(prev => [...prev, newUnit]);\r\n    return newUnit;\r\n  };\r\n\r\n  // Update an existing unit\r\n  const updateUnit = (unitId, unitData) => {\r\n    const updatedUnit = {\r\n      ...unitData,\r\n      id: unitId,\r\n      updatedAt: new Date().toISOString()\r\n    };\r\n    setUnits(prev => prev.map(unit => \r\n      unit.id === unitId ? updatedUnit : unit\r\n    ));\r\n    return updatedUnit;\r\n  };\r\n\r\n  // Delete a unit\r\n  const deleteUnit = (unitId) => {\r\n    setUnits(prev => prev.filter(unit => unit.id !== unitId));\r\n  };\r\n\r\n  // Get a unit by ID\r\n  const getUnitById = (unitId) => {\r\n    return units.find(unit => unit.id === unitId);\r\n  };\r\n\r\n  // Get units by type\r\n  const getUnitsByType = (type) => {\r\n    return units.filter(unit => unit.unitType === type);\r\n  };\r\n\r\n  // Get units by rarity\r\n  const getUnitsByRarity = (rarity) => {\r\n    return units.filter(unit => unit.rarity === rarity);\r\n  };\r\n\r\n  // Get units by element\r\n  const getUnitsByElement = (element) => {\r\n    return units.filter(unit => unit.element === element);\r\n  };\r\n\r\n  // Search units by name\r\n  const searchUnits = (query) => {\r\n    if (!query) return units;\r\n    return units.filter(unit => \r\n      unit.name.toLowerCase().includes(query.toLowerCase()) ||\r\n      unit.description.toLowerCase().includes(query.toLowerCase()) ||\r\n      unit.element.toLowerCase().includes(query.toLowerCase()) ||\r\n      unit.rarity.toLowerCase().includes(query.toLowerCase()) ||\r\n      unit.tier.toLowerCase().includes(query.toLowerCase())\r\n    );\r\n  };\r\n\r\n  // Clear all units (for admin reset)\r\n  const clearAllUnits = () => {\r\n    setUnits([]);\r\n  };\r\n\r\n  // Bulk import units\r\n  const importUnits = (unitsArray) => {\r\n    const processedUnits = unitsArray.map((unit, index) => ({\r\n      ...unit,\r\n      id: Math.max(...units.map(u => u.id), 0) + index + 1,\r\n      createdAt: new Date().toISOString(),\r\n      updatedAt: new Date().toISOString()\r\n    }));\r\n    setUnits(prev => [...prev, ...processedUnits]);\r\n    return processedUnits;\r\n  };\r\n\r\n  const value = {\r\n    units,\r\n    loading,\r\n    addUnit,\r\n    updateUnit,\r\n    deleteUnit,\r\n    getUnitById,\r\n    getUnitsByType,\r\n    getUnitsByRarity,\r\n    getUnitsByElement,\r\n    searchUnits,\r\n    clearAllUnits,\r\n    importUnits,\r\n    // Statistics\r\n    totalUnits: units.length,\r\n    baseUnits: units.filter(u => u.unitType === 'base').length,\r\n    evolutionUnits: units.filter(u => u.unitType === 'evolution').length,\r\n    nonEvolvableUnits: units.filter(u => u.unitType === 'non-evolvable').length,\r\n    vanguardUnits: units.filter(u => u.rarity === 'Vanguard').length,\r\n    secretUnits: units.filter(u => u.rarity === 'Secret').length,\r\n    mythicalUnits: units.filter(u => u.rarity === 'Mythical').length\r\n  };\r\n\r\n  return (\r\n    <UnitsContext.Provider value={value}>\r\n      {children}\r\n    </UnitsContext.Provider>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}